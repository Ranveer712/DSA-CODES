// Online C++ compiler to run C++ program online
vector<vector<int>>nearest(vector<vector<int>>grid)
{
    int n=grid.size();
    int m=grid[0].size();
    vector<vector<int>>vis(n,vector<int>(m,0));
    vector<vector<int>>dist;
    
    
    //Multi Source BFS problem
    
    queue<pair<pair<int,int>,int>q;
    
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(grid[i][j]=='1' && vis[i][j]=='0')
            {
                q.push({{i,j},0});
                vis[i][j]=='1';
            }
        }
        
    }
    
    int dr[]={-1,0,1,0};
    int dc[]={0,1,0,-1};
    
    while(!q.empty())
    {
        int r=q.front().first.first;
        int c=q.front().first.second;
        int steps=q.front().second;
        q.pop();
        dist[r][c]=steps;
        
        
        for(int i=0;i<4;i++)
        {
            int nr=r+dr[i];
            int nc=c+dc[i];
        }
        if(nr>=0 && nr<n && nc>=0 && nc<m && vis[nr][nc]=='0'&& grid[nr][nc]=='1')
        {
            vis[nr][nc]=1;
            q.push({{nr,nc},steps+1});
        }
    }
    return dist;
}
